on: push
jobs:
  packages:
    strategy:
      fail-fast: false
      matrix:
        package:
          - server
          - sqlite
          - html
          - css
          - javascript
          - utilities
          - node
          - typescript
          - documentation
          - caddy
          - build
          - package
          - production
          - development
        os:
          - windows
          - macos
          - ubuntu
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        working-directory: ./${{ matrix.package }}/
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: latest
          registry-url: https://registry.npmjs.org/
      - run: npm install-ci-test
      - if: ${{ matrix.os == 'ubuntu' && startsWith(github.ref, format('refs/tags/{0}--', matrix.package)) }}
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  applications--build:
    strategy:
      fail-fast: false
      matrix:
        application:
          - monitor
        os:
          - windows
          - macos
          - ubuntu
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        working-directory: ./${{ matrix.package }}/
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: latest
      - run: |
          npm install-ci-test
          npx package
          mv ../${{ matrix.application }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }} ./${{ matrix.application }}--${{ matrix.os }}--${{ startsWith(github.ref, format('refs/tags/{0}--', matrix.application)) && github.ref_name || github.sha }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}
      - uses: actions/upload-artifact@main
        with:
          path: ./${{ matrix.application }}--${{ matrix.os }}--${{ startsWith(github.ref, format('refs/tags/{0}--', matrix.application)) && github.ref_name || github.sha }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}
          name: ${{ matrix.application }}--${{ matrix.os }}--${{ startsWith(github.ref, format('refs/tags/{0}--', matrix.application)) && github.ref_name || github.sha }}.${{ matrix.os == 'windows' && 'zip' || 'tar.gz' }}

  applications--release:
    strategy:
      fail-fast: false
      matrix:
        application:
          - monitor
    needs: applications--build
    runs-on: ubuntu-latest
    steps:
      - if: ${{ startsWith(github.ref, format('refs/tags/{0}--', matrix.application)) }}
        uses: actions/download-artifact@main
        with:
          pattern: ${{ matrix.application }}--*
      - if: ${{ startsWith(github.ref, format('refs/tags/{0}--', matrix.application)) }}
        uses: softprops/action-gh-release@master
        with:
          files: ./**/*.*
